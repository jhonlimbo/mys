<?php

/**
 * BasePaymentDate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property integer $supplier_id
 * @property boolean $paid
 * @property Supplier $Supplier
 * @property Doctrine_Collection $Invoices
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method date                getDate()        Returns the current record's "date" value
 * @method integer             getSupplierId()  Returns the current record's "supplier_id" value
 * @method boolean             getPaid()        Returns the current record's "paid" value
 * @method Supplier            getSupplier()    Returns the current record's "Supplier" value
 * @method Doctrine_Collection getInvoices()    Returns the current record's "Invoices" collection
 * @method PaymentDate         setId()          Sets the current record's "id" value
 * @method PaymentDate         setDate()        Sets the current record's "date" value
 * @method PaymentDate         setSupplierId()  Sets the current record's "supplier_id" value
 * @method PaymentDate         setPaid()        Sets the current record's "paid" value
 * @method PaymentDate         setSupplier()    Sets the current record's "Supplier" value
 * @method PaymentDate         setInvoices()    Sets the current record's "Invoices" collection
 * 
 * @package    MyS
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaymentDate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment_date');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('supplier_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('paid', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));


        $this->index('supplierDate', array(
             'fields' => 
             array(
              0 => 'date',
              1 => 'supplier_id',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Supplier', array(
             'local' => 'supplier_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Invoice as Invoices', array(
             'local' => 'id',
             'foreign' => 'payment_date_id'));
    }
}