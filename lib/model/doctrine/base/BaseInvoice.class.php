<?php

/**
 * BaseInvoice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $number
 * @property decimal $value
 * @property date $date
 * @property integer $supplier_id
 * @property integer $building_id
 * @property integer $payment_date_id
 * @property boolean $paid
 * @property Building $Building
 * @property PaymentDate $PaymentDate
 * 
 * @method integer     getId()              Returns the current record's "id" value
 * @method integer     getNumber()          Returns the current record's "number" value
 * @method decimal     getValue()           Returns the current record's "value" value
 * @method date        getDate()            Returns the current record's "date" value
 * @method integer     getSupplierId()      Returns the current record's "supplier_id" value
 * @method integer     getBuildingId()      Returns the current record's "building_id" value
 * @method integer     getPaymentDateId()   Returns the current record's "payment_date_id" value
 * @method boolean     getPaid()            Returns the current record's "paid" value
 * @method Building    getBuilding()        Returns the current record's "Building" value
 * @method PaymentDate getPaymentDate()     Returns the current record's "PaymentDate" value
 * @method Invoice     setId()              Sets the current record's "id" value
 * @method Invoice     setNumber()          Sets the current record's "number" value
 * @method Invoice     setValue()           Sets the current record's "value" value
 * @method Invoice     setDate()            Sets the current record's "date" value
 * @method Invoice     setSupplierId()      Sets the current record's "supplier_id" value
 * @method Invoice     setBuildingId()      Sets the current record's "building_id" value
 * @method Invoice     setPaymentDateId()   Sets the current record's "payment_date_id" value
 * @method Invoice     setPaid()            Sets the current record's "paid" value
 * @method Invoice     setBuilding()        Sets the current record's "Building" value
 * @method Invoice     setPaymentDate()     Sets the current record's "PaymentDate" value
 * 
 * @package    MyS
 * @subpackage model
 * @author     Ferbal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvoice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('invoice');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('number', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('value', 'decimal', null, array(
             'type' => 'decimal',
             'notnull' => true,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('supplier_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('building_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('payment_date_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('paid', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('numberSupplier', array(
             'fields' => 
             array(
              0 => 'number',
              1 => 'supplier_id',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Building', array(
             'local' => 'building_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PaymentDate', array(
             'local' => 'payment_date_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}